{"version":3,"sources":["App/layout/AdminLayout/Navigation/NavLogo/index.js","App/layout/AdminLayout/Navigation/NavContent/NavIcon/index.js","App/layout/AdminLayout/Navigation/NavContent/NavBadge/index.js","App/layout/AdminLayout/Navigation/NavContent/NavItem/index.js","App/layout/AdminLayout/Navigation/NavContent/NavCollapse/index.js","App/layout/AdminLayout/Navigation/NavContent/NavGroup/index.js","App/layout/AdminLayout/Navigation/NavContent/index.js","App/layout/AdminLayout/Navigation/OutsideClick/index.js","App/layout/AdminLayout/Navigation/index.js","App/layout/AdminLayout/index.js","store/constant.js","menu-items.js","App/layout/AdminLayout/Breadcrumb/index.js","routes.js"],"names":["navLogo","props","toggleClass","collapseMenu","className","href","DEMO","BLANK_LINK","join","id","onClick","onToggleNavigation","navIcon","navIcons","items","icon","navBadge","navBadges","badge","badgeClass","type","title","NavItem","itemTitle","this","item","subContent","itemTarget","target","external","url","rel","NavIcon","NavBadge","layout","NavLink","to","exact","mainContent","onItemLeave","windowWidth","classes","onItemClick","Component","withRouter","connect","state","dispatch","actionTypes","windowSize","NavCollapse","document","location","pathname","toString","split","findIndex","collapse","onCollapseToggle","isOpen","isTrigger","navItems","children","collapses","Object","keys","map","navLinkClass","navItemClass","onMouseLeave","onNavCollapseLeave","onMouseEnter","menu","navGroup","group","groups","NavContent","scrollWidth","prevDisable","nextDisable","scrollPrevHandler","wrapperWidth","getElementById","clientWidth","setState","scrollNextHandler","contentWidth","navigation","NavGroup","prevClass","nextClass","onNavContentLeave","style","marginLeft","OutsideClick","setWrapperRef","bind","handleOutsideClick","addEventListener","removeEventListener","node","wrapperRef","event","contains","ref","Navigation","resize","onChangeLayout","window","navClass","preLayout","layoutType","navBackColor","navBrandColor","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navBackImage","navIconColor","navFixedLayout","navListTitleHide","body","classList","add","backgroundImage","layout6Background","backgroundSize","layout6BackSize","remove","rtlLayout","boxLayout","navContent","NavLogo","AdminLayout","fullScreenExitHandler","fullscreenElement","webkitIsFullScreen","mozFullScreen","msFullscreenElement","onFullScreenExit","onComponentWillMount","routes","route","index","component","Route","path","name","render","enabled","isFullScreen","mobileOutClickHandler","Breadcrumb","fallback","Loader","Switch","Redirect","from","defaultPath","configBlock","main","componentWillReceiveProps","getCollapse","filter","config","basename","breadcrumb","breadcrumbs","jQuery","$","global","React","lazy"],"mappings":"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","file":"static/js/7.f72338af.chunk.js","sourcesContent":["import React from 'react';\r\nimport DEMO  from './../../../../../store/constant';\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\n\r\nconst navLogo = (props) => {\r\n    let toggleClass = ['mobile-menu'];\r\n    if (props.collapseMenu) {\r\n        toggleClass = [...toggleClass, 'on'];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <div className=\"navbar-brand header-logo\">\r\n                 <a href={DEMO.BLANK_LINK} className=\"b-brand\">\r\n                    <div className=\"b-bg\">\r\n                        <i className=\"feather icon-trending-up\" />\r\n                    </div>\r\n                    <span className=\"b-title\">KoinPouch</span>\r\n                 </a>\r\n                <a href={DEMO.BLANK_LINK} className={toggleClass.join(' ')} id=\"mobile-collapse\" onClick={props.onToggleNavigation}><span /></a>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default navLogo;\r\n","import React from 'react';\r\n\r\nconst navIcon = (props) => {\r\n    let navIcons = false;\r\n    if (props.items.icon) {\r\n        navIcons = <span className=\"pcoded-micon\"><i className={props.items.icon} /></span>;\r\n    }\r\n    return navIcons;\r\n};\r\n\r\nexport default navIcon;","import React from 'react';\r\n\r\nconst navBadge = (props) => {\r\n    let navBadges = false;\r\n    if (props.items.badge) {\r\n        const badgeClass = ['label', 'pcoded-badge', props.items.badge.type];\r\n\r\n        navBadges = (\r\n            <span className={badgeClass.join(' ')}>\r\n                {props.items.badge.title}\r\n            </span>\r\n        );\r\n    }\r\n    return navBadges;\r\n};\r\n\r\nexport default navBadge;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport NavIcon from \"./../NavIcon\";\r\nimport NavBadge from \"./../NavBadge\";\r\nimport * as actionTypes from \"../../../../../../store/actions\";\r\n\r\nclass NavItem extends Component {\r\n\r\n    render() {\r\n        let itemTitle = this.props.item.title;\r\n        if (this.props.item.icon) {\r\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.item.title}</span>;\r\n        }\r\n\r\n        let itemTarget = '';\r\n        if (this.props.item.target) {\r\n            itemTarget = '_blank';\r\n        }\r\n\r\n        let subContent;\r\n        if(this.props.item.external) {\r\n            subContent = (\r\n                <a href={this.props.item.url} target='_blank' rel='noopener noreferrer'>\r\n                    <NavIcon items={this.props.item}/>\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.item}/>\r\n                </a>\r\n            );\r\n        } else {\r\n            subContent = (\r\n                <NavLink to={this.props.item.url} className=\"nav-link\" exact={true} target={itemTarget}>\r\n                    <NavIcon items={this.props.item}/>\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.item}/>\r\n                </NavLink>\r\n            );\r\n        }\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            mainContent = (\r\n                <li onClick={this.props.onItemLeave}>{subContent}</li>\r\n            );\r\n        } else {\r\n            if (this.props.windowWidth < 992) {\r\n                mainContent = (\r\n                    <li className={this.props.item.classes} onClick={this.props.onItemClick}>{subContent}</li>\r\n                );\r\n            } else {\r\n                mainContent = (\r\n                    <li className={this.props.item.classes}>{subContent}</li>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onItemClick: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n        onItemLeave: () => dispatch({type: actionTypes.NAV_CONTENT_LEAVE})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (windowSize(NavItem)));\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../../store/actions\";\r\nimport NavIcon from './../NavIcon';\r\nimport NavBadge from './../NavBadge';\r\nimport NavItem from \"../NavItem\";\r\nimport LoopNavCollapse from './index';\r\n\r\nclass NavCollapse extends Component {\r\n\r\n    componentDidMount() {\r\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\r\n        if (currentIndex > -1) {\r\n            this.props.onCollapseToggle(this.props.collapse.id, this.props.type);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isOpen, isTrigger} = this.props;\r\n\r\n        let navItems = '';\r\n        if (this.props.collapse.children) {\r\n            const collapses = this.props.collapse.children;\r\n            navItems = Object.keys(collapses).map(item => {\r\n                item = collapses[item];\r\n                switch (item.type) {\r\n                    case 'collapse':\r\n                        return <LoopNavCollapse key={item.id} collapse={item} type=\"sub\" />;\r\n                    case 'item':\r\n                        return <NavItem layout={this.props.layout} key={item.id} item={item}/>;\r\n                    default:\r\n                        return false;\r\n                }\r\n            });\r\n        }\r\n\r\n        let itemTitle = this.props.collapse.title;\r\n        if (this.props.collapse.icon) {\r\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.collapse.title}</span>;\r\n        }\r\n\r\n        let navLinkClass = ['nav-link'];\r\n\r\n        let navItemClass = ['nav-item', 'pcoded-hasmenu'];\r\n        const openIndex = isOpen.findIndex(id => id === this.props.collapse.id);\r\n        if (openIndex > -1) {\r\n            navItemClass = [...navItemClass, 'active'];\r\n            if (this.props.layout !== 'horizontal') {\r\n                navLinkClass = [...navLinkClass, 'active'];\r\n            }\r\n        }\r\n\r\n        const triggerIndex = isTrigger.findIndex(id => id === this.props.collapse.id);\r\n        if (triggerIndex > -1) {\r\n            navItemClass = [...navItemClass, 'pcoded-trigger'];\r\n        }\r\n\r\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\r\n        if (currentIndex > -1) {\r\n            navItemClass = [...navItemClass, 'active'];\r\n            if (this.props.layout !== 'horizontal') {\r\n                navLinkClass = [...navLinkClass, 'active'];\r\n            }\r\n        }\r\n\r\n        const subContent = (\r\n            <Aux>\r\n                <a href={DEMO.BLANK_LINK} className={navLinkClass.join(' ')} onClick={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\r\n                    <NavIcon items={this.props.collapse} />\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.collapse} />\r\n                </a>\r\n                <ul className=\"pcoded-submenu\">\r\n                    {navItems}\r\n                </ul>\r\n            </Aux>\r\n        );\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            mainContent = (\r\n                <li className={navItemClass.join(' ')} onMouseLeave={() => this.props.onNavCollapseLeave(this.props.collapse.id, this.props.type)} onMouseEnter={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\r\n                    {subContent}\r\n                </li>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <li className={navItemClass.join(' ')}>\r\n                    {subContent}\r\n                </li>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        isOpen: state.isOpen,\r\n        isTrigger: state.isTrigger\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCollapseToggle: (id, type) => dispatch({type: actionTypes.COLLAPSE_TOGGLE, menu: {id: id, type: type}}),\r\n        onNavCollapseLeave: (id, type) => dispatch({type: actionTypes.NAV_COLLAPSE_LEAVE, menu: {id: id, type: type}})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavCollapse));\r\n","import React from 'react';\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport NavCollapse from './../NavCollapse';\r\nimport NavItem from './../NavItem';\r\n\r\nconst navGroup = (props) => {\r\n    let navItems = '';\r\n    if (props.group.children) {\r\n        const groups = props.group.children;\r\n        navItems = Object.keys(groups).map(item => {\r\n            item = groups[item];\r\n            switch (item.type) {\r\n                case 'collapse':\r\n                    return <NavCollapse key={item.id} collapse={item} type=\"main\" />;\r\n                case 'item':\r\n                    return <NavItem layout={props.layout} key={item.id} item={item} />;\r\n                default:\r\n                    return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <li key={props.group.id} className=\"nav-item pcoded-menu-caption\"><label>{props.group.title}</label></li>\r\n            {navItems}\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default navGroup;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\nimport NavGroup from './NavGroup';\r\nimport DEMO from \"../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass NavContent extends Component {\r\n    state = {\r\n        scrollWidth: 0,\r\n        prevDisable: true,\r\n        nextDisable: false\r\n    };\r\n\r\n    scrollPrevHandler = () => {\r\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\r\n\r\n        let scrollWidth = this.state.scrollWidth - wrapperWidth;\r\n        if(scrollWidth < 0) {\r\n            this.setState({scrollWidth: 0, prevDisable: true, nextDisable: false});\r\n        } else {\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false});\r\n        }\r\n    };\r\n\r\n    scrollNextHandler = () => {\r\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\r\n        const contentWidth = document.getElementById('sidenav-horizontal').clientWidth;\r\n\r\n        let scrollWidth = this.state.scrollWidth + (wrapperWidth - 80);\r\n        if (scrollWidth > (contentWidth - wrapperWidth)) {\r\n            scrollWidth = contentWidth - wrapperWidth + 80;\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false, nextDisable: true});\r\n        } else {\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const navItems = this.props.navigation.map(item => {\r\n                switch (item.type) {\r\n                    case 'group':\r\n                        return <NavGroup layout={this.props.layout} key={item.id} group={item}/>;\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n        );\r\n\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            let prevClass = ['sidenav-horizontal-prev'];\r\n            if (this.state.prevDisable) {\r\n                prevClass = [...prevClass, 'disabled'];\r\n            }\r\n            let nextClass = ['sidenav-horizontal-next'];\r\n            if (this.state.nextDisable) {\r\n                nextClass = [...nextClass, 'disabled'];\r\n            }\r\n\r\n            mainContent = (\r\n                <div className=\"navbar-content sidenav-horizontal\" id=\"layout-sidenav\">\r\n                    <a href={DEMO.BLANK_LINK} className={prevClass.join(' ')} onClick={this.scrollPrevHandler}><span/></a>\r\n                    <div id=\"sidenav-wrapper\" className=\"sidenav-horizontal-wrapper\">\r\n                        <ul id=\"sidenav-horizontal\" className=\"nav pcoded-inner-navbar sidenav-inner\" onMouseLeave={this.props.onNavContentLeave} style={{marginLeft: '-'+this.state.scrollWidth+'px'}}>\r\n                            {navItems}\r\n                        </ul>\r\n                    </div>\r\n                    <a href={DEMO.BLANK_LINK} className={nextClass.join(' ')} onClick={this.scrollNextHandler}><span/></a>\r\n                </div>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <div className=\"navbar-content datta-scroll\">\r\n                    <PerfectScrollbar>\r\n                        <ul className=\"nav pcoded-inner-navbar navbar-purple\">\r\n                            {navItems}\r\n                        </ul>\r\n                    </PerfectScrollbar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        collapseMenu: state.collapseMenu,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onNavContentLeave: () => dispatch({type: actionTypes.NAV_CONTENT_LEAVE}),\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (windowSize(NavContent)));\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass OutsideClick extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    /**\r\n     * close menu if clicked on outside of element\r\n     */\r\n    handleOutsideClick(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n            if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n                this.props.onToggleNavigation();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"nav-outside\" ref={this.setWrapperRef}>{this.props.children}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (windowSize(OutsideClick));","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport NavLogo from './NavLogo';\r\nimport NavContent from './NavContent';\r\nimport OutsideClick from './OutsideClick';\r\nimport Aux from './../../../../hoc/_Aux'\r\nimport * as actionTypes from './../../../../store/actions';\r\nimport navigation from '../../../../menu-items';\r\n\r\nclass Navigation extends Component {\r\n\r\n    resize = () => {\r\n        const contentWidth = document.getElementById('root').clientWidth;\r\n\r\n        if (this.props.layout === 'horizontal' && contentWidth < 992) {\r\n            this.props.onChangeLayout('vertical');\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.resize();\r\n        window.addEventListener('resize', this.resize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize)\r\n    }\r\n\r\n    render() {\r\n        let navClass = [\r\n            'pcoded-navbar navbar-purple',\r\n        ];\r\n\r\n        if (this.props.preLayout !== null && this.props.preLayout !== '' && this.props.preLayout !== 'layout-6' && this.props.preLayout !== 'layout-8') {\r\n            navClass = [...navClass, this.props.preLayout];\r\n        } else {\r\n            navClass = [\r\n                ...navClass,\r\n                this.props.layoutType,\r\n                this.props.navBackColor,\r\n                this.props.navBrandColor,\r\n                'drp-icon-'+this.props.navDropdownIcon,\r\n                'menu-item-icon-'+this.props.navListIcon,\r\n                this.props.navActiveListColor,\r\n                this.props.navListTitleColor,\r\n            ];\r\n\r\n            if (this.props.layout === 'horizontal') {\r\n                navClass = [...navClass, 'theme-horizontal'];\r\n            }\r\n\r\n            if (this.props.navBackImage) {\r\n                navClass = [...navClass, this.props.navBackImage];\r\n            }\r\n\r\n            if (this.props.navIconColor) {\r\n                navClass = [...navClass, 'icon-colored'];\r\n            }\r\n\r\n            if (!this.props.navFixedLayout) {\r\n                navClass = [...navClass, 'menupos-static'];\r\n            }\r\n\r\n            if (this.props.navListTitleHide) {\r\n                navClass = [...navClass, 'caption-hide'];\r\n            }\r\n        }\r\n\r\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n            navClass = [...navClass, 'mob-open'];\r\n        } else if (this.props.collapseMenu) {\r\n            navClass = [...navClass, 'navbar-collapsed'];\r\n        }\r\n\r\n        if (this.props.preLayout === 'layout-6') {\r\n            document.body.classList.add('layout-6');\r\n            document.body.style.backgroundImage = this.props.layout6Background;\r\n            document.body.style.backgroundSize = this.props.layout6BackSize;\r\n        }\r\n\r\n        if (this.props.preLayout === 'layout-8') {\r\n            document.body.classList.add('layout-8');\r\n        }\r\n\r\n        if (this.props.layoutType === 'dark') {\r\n            document.body.classList.add('datta-dark');\r\n        } else {\r\n            document.body.classList.remove('datta-dark');\r\n        }\r\n\r\n        if (this.props.rtlLayout) {\r\n            document.body.classList.add('datta-rtl');\r\n        } else {\r\n            document.body.classList.remove('datta-rtl');\r\n        }\r\n\r\n        if (this.props.boxLayout) {\r\n            document.body.classList.add('container');\r\n            document.body.classList.add('box-layout');\r\n        } else {\r\n            document.body.classList.remove('container');\r\n            document.body.classList.remove('box-layout');\r\n        }\r\n\r\n        let navContent = (\r\n            <div className=\"navbar-wrapper\">\r\n                <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\r\n                <NavContent navigation={navigation.items} />\r\n            </div>\r\n        );\r\n        if (this.props.windowWidth < 992) {\r\n            navContent = (\r\n                <OutsideClick>\r\n                    <div className=\"navbar-wrapper\">\r\n                        <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\r\n                        <NavContent navigation={navigation.items} />\r\n                    </div>\r\n                </OutsideClick>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <nav className={navClass.join(' ')}>\r\n                    {navContent}\r\n                </nav>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        preLayout: state.preLayout,\r\n        collapseMenu: state.collapseMenu,\r\n        layoutType: state.layoutType,\r\n        navBackColor: state.navBackColor,\r\n        navBackImage: state.navBackImage,\r\n        navIconColor: state.navIconColor,\r\n        navBrandColor: state.navBrandColor,\r\n        layout6Background: state.layout6Background,\r\n        layout6BackSize: state.layout6BackSize,\r\n        rtlLayout: state.rtlLayout,\r\n        navFixedLayout: state.navFixedLayout,\r\n        boxLayout: state.boxLayout,\r\n        navDropdownIcon: state.navDropdownIcon,\r\n        navListIcon: state.navListIcon,\r\n        navActiveListColor: state.navActiveListColor,\r\n        navListTitleColor: state.navListTitleColor,\r\n        navListTitleHide: state.navListTitleHide\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n        onChangeLayout: (layout) => dispatch({type: actionTypes.CHANGE_LAYOUT, layout: layout}),\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(Navigation)));\r\n","import React, { Component, Suspense } from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Fullscreen from \"react-full-screen\";\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Navigation from './Navigation';\r\n// import NavBar from './NavBar';\r\nimport Breadcrumb from './Breadcrumb';\r\nimport Loader from \"../Loader\";\r\nimport routes from \"../../../routes\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport * as actionTypes from \"../../../store/actions\";\r\n\r\nimport './app.scss';\r\n\r\nclass AdminLayout extends Component {\r\n\r\n    fullScreenExitHandler = () => {\r\n        if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\r\n            this.props.onFullScreenExit();\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (this.props.windowWidth > 992 && this.props.windowWidth <= 1024 && this.props.layout !== 'horizontal') {\r\n            this.props.onComponentWillMount();\r\n        }\r\n    }\r\n\r\n    mobileOutClickHandler() {\r\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n            this.props.onComponentWillMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        /* full screen exit call */\r\n        document.addEventListener('fullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('webkitfullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('mozfullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('MSFullscreenChange', this.fullScreenExitHandler);\r\n\r\n        const menu = routes.map((route, index) => {\r\n            return (route.component) ? (\r\n                <Route\r\n                    key={index}\r\n                    path={route.path}\r\n                    exact={route.exact}\r\n                    name={route.name}\r\n                    render={props => (\r\n                        <route.component {...props} />\r\n                    )} />\r\n            ) : (null);\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Fullscreen enabled={this.props.isFullScreen}>\r\n                    <Navigation />\r\n                    {/* <NavBar /> */}\r\n                    <div className=\"pcoded-main-container\" onClick={() => this.mobileOutClickHandler}>\r\n                        <div className=\"pcoded-wrapper\">\r\n                            <div className=\"pcoded-content\">\r\n                                <div className=\"pcoded-inner-content\">\r\n                                    <Breadcrumb />\r\n                                    <div className=\"main-body\">\r\n                                        <div className=\"page-wrapper\">\r\n                                            <Suspense fallback={<Loader/>}>\r\n                                                <Switch>\r\n                                                    {menu}\r\n                                                    <Redirect from=\"/\" to={this.props.defaultPath} />\r\n                                                </Switch>\r\n                                            </Suspense>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fullscreen>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        defaultPath: state.defaultPath,\r\n        isFullScreen: state.isFullScreen,\r\n        collapseMenu: state.collapseMenu,\r\n        configBlock: state.configBlock,\r\n        layout: state.layout\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFullScreenExit: () => dispatch({type: actionTypes.FULL_SCREEN_EXIT}),\r\n        onComponentWillMount: () => dispatch({type: actionTypes.COLLAPSE_MENU})\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (windowSize(AdminLayout));","const DEMO = {\r\n    BLANK_LINK: \"#!\",\r\n};\r\n\r\nexport default DEMO;","export default {\r\n    items: [\r\n        {\r\n            id: 'navigation',\r\n            title: 'Navigation',\r\n            type: 'group',\r\n            icon: 'icon-navigation',\r\n            children: [\r\n                {\r\n                    id: 'wallet',\r\n                    title: 'Wallet',\r\n                    type: 'item',\r\n                    url: '/dashboard/default',\r\n                    icon: 'feather icon-home',\r\n                },\r\n                {\r\n                    id: 'tickers',\r\n                    title: 'Tickers',\r\n                    type: 'item',\r\n                    url: '/dashboard/tickers',\r\n                    icon: 'feather icon-pie-chart',\r\n                },\r\n                {\r\n                    id: 'balances',\r\n                    title: 'Balances',\r\n                    type: 'item',\r\n                    url: '/dashboard/balances',\r\n                    icon: 'feather icon-box',\r\n                },\r\n                {\r\n                    id: 'transactions',\r\n                    title: 'Transactions',\r\n                    type: 'item',\r\n                    url: '/dashboard/transactions',\r\n                    icon: 'feather icon-box',\r\n                },\r\n                {\r\n                    id: 'transfers',\r\n                    title: 'Transfers',\r\n                    type: 'item',\r\n                    url: '/dashboard/transfers',\r\n                    icon: 'feather icon-box',\r\n                },\r\n            ]\r\n        },\r\n    ]\r\n}","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport config from '../../../../config';\r\nimport navigation from '../../../../menu-items';\r\nimport DEMO from \"../../../../store/constant\";\r\nimport Aux from \"../../../../hoc/_Aux\";\r\n\r\nclass Breadcrumb extends Component {\r\n    state = {\r\n        main: [],\r\n        item: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        (navigation.items).map((item, index) => {\r\n            if (item.type && item.type === 'group') {\r\n                this.getCollapse(item, index);\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps = () => {\r\n        (navigation.items).map((item, index) => {\r\n            if (item.type && item.type === 'group') {\r\n                this.getCollapse(item);\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n\r\n    getCollapse = (item) => {\r\n        if (item.children) {\r\n            (item.children).filter( collapse => {\r\n                if (collapse.type && collapse.type === 'collapse') {\r\n                    this.getCollapse(collapse,);\r\n                } else if (collapse.type && collapse.type === 'item') {\r\n                    if (document.location.pathname === config.basename+collapse.url) {\r\n                        this.setState({item: collapse, main: item});\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let main, item;\r\n        let breadcrumb = '';\r\n        let title = 'Welcome';\r\n        if (this.state.main && this.state.main.type === 'collapse') {\r\n            main = (\r\n                <li className=\"breadcrumb-item\">\r\n                    <a href={DEMO.BLANK_LINK}>{this.state.main.title}</a>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        if (this.state.item && this.state.item.type === 'item') {\r\n            title = this.state.item.title;\r\n            item = (\r\n                <li className=\"breadcrumb-item\">\r\n                    <a href={DEMO.BLANK_LINK}>{title}</a>\r\n                </li>\r\n            );\r\n\r\n            if(this.state.item.breadcrumbs !== false) {\r\n                breadcrumb = (\r\n                    <div className=\"page-header\">\r\n                        <div className=\"page-block\">\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header-title\">\r\n                                        <h5 className=\"m-b-10\">{title}</h5>\r\n                                    </div>\r\n                                    <ul className=\"breadcrumb\">\r\n                                        <li className=\"breadcrumb-item\">\r\n                                            <Link to=\"/\"><i className=\"feather icon-home\"/></Link>\r\n                                        </li>\r\n                                        {main}\r\n                                        {item}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        document.title = title + ' | Koin Pouch';\r\n\r\n        return (\r\n            <Aux>\r\n                {breadcrumb}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\nglobal.jQuery = $;\r\n\r\nconst DashboardDefault = React.lazy(() => import('./Demo/Dashboard/Default'));\r\nconst DashboardTickers = React.lazy(() => import('./Demo/Dashboard/Tickers'));\r\nconst DashboardBalances = React.lazy(() => import('./Demo/Dashboard/Balances'));\r\nconst DashboardTransactions = React.lazy(() => import('./Demo/Dashboard/Transactions')); \r\nconst DashboardTransfers = React.lazy(() => import('./Demo/Dashboard/Transfers')); \r\n\r\nconst routes = [\r\n    { path: '/dashboard/default', exact: true, name: 'Default', component: DashboardDefault },\r\n    { path: '/dashboard/tickers', exact: true, name: 'Tickers', component: DashboardTickers },\r\n    { path: '/dashboard/balances', exact: true, name: 'Balances', component: DashboardBalances },\r\n    { path: '/dashboard/transactions', exact: true, name: 'Transactions', component: DashboardTransactions },\r\n    { path: '/dashboard/transfers', exact: true, name: 'Transfers', component: DashboardTransfers },\r\n];\r\n\r\nexport default routes;"],"sourceRoot":""}